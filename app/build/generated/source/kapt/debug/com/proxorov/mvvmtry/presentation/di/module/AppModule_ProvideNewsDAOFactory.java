// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.proxorov.mvvmtry.presentation.di.module;

import com.proxorov.mvvmtry.data.source.database.NewsDAO;
import com.proxorov.mvvmtry.data.source.database.NewsDB;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideNewsDAOFactory implements Factory<NewsDAO> {
  private final AppModule module;

  private final Provider<NewsDB> dbProvider;

  public AppModule_ProvideNewsDAOFactory(AppModule module, Provider<NewsDB> dbProvider) {
    assert module != null;
    this.module = module;
    assert dbProvider != null;
    this.dbProvider = dbProvider;
  }

  @Override
  public NewsDAO get() {
    return Preconditions.checkNotNull(
        module.provideNewsDAO(dbProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NewsDAO> create(AppModule module, Provider<NewsDB> dbProvider) {
    return new AppModule_ProvideNewsDAOFactory(module, dbProvider);
  }
}
