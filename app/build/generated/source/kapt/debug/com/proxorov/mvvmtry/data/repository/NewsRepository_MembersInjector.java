// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.proxorov.mvvmtry.data.repository;

import com.proxorov.mvvmtry.data.source.database.NewsDAO;
import com.proxorov.mvvmtry.data.source.remote.api.NewsApi;
import com.proxorov.mvvmtry.data.utils.NetworkStatus;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewsRepository_MembersInjector implements MembersInjector<NewsRepository> {
  private final Provider<NewsApi> newsApiProvider;

  private final Provider<NewsDAO> newsDAOProvider;

  private final Provider<NetworkStatus> networkStatusProvider;

  public NewsRepository_MembersInjector(
      Provider<NewsApi> newsApiProvider,
      Provider<NewsDAO> newsDAOProvider,
      Provider<NetworkStatus> networkStatusProvider) {
    assert newsApiProvider != null;
    this.newsApiProvider = newsApiProvider;
    assert newsDAOProvider != null;
    this.newsDAOProvider = newsDAOProvider;
    assert networkStatusProvider != null;
    this.networkStatusProvider = networkStatusProvider;
  }

  public static MembersInjector<NewsRepository> create(
      Provider<NewsApi> newsApiProvider,
      Provider<NewsDAO> newsDAOProvider,
      Provider<NetworkStatus> networkStatusProvider) {
    return new NewsRepository_MembersInjector(
        newsApiProvider, newsDAOProvider, networkStatusProvider);
  }

  @Override
  public void injectMembers(NewsRepository instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.newsApi = newsApiProvider.get();
    instance.newsDAO = newsDAOProvider.get();
    instance.networkStatus = networkStatusProvider.get();
  }
}
