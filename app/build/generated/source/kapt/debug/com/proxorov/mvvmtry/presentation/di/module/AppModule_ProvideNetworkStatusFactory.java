// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.proxorov.mvvmtry.presentation.di.module;

import android.content.Context;
import com.proxorov.mvvmtry.data.utils.NetworkStatus;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideNetworkStatusFactory implements Factory<NetworkStatus> {
  private final AppModule module;

  private final Provider<Context> applicationProvider;

  public AppModule_ProvideNetworkStatusFactory(
      AppModule module, Provider<Context> applicationProvider) {
    assert module != null;
    this.module = module;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public NetworkStatus get() {
    return Preconditions.checkNotNull(
        module.provideNetworkStatus(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NetworkStatus> create(
      AppModule module, Provider<Context> applicationProvider) {
    return new AppModule_ProvideNetworkStatusFactory(module, applicationProvider);
  }
}
