// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.proxorov.mvvmtry.presentation.di.module;

import com.proxorov.mvvmtry.data.source.remote.api.NewsApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class RestModule_ProvideNewsApiFactory implements Factory<NewsApi> {
  private final RestModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RestModule_ProvideNewsApiFactory(RestModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public NewsApi get() {
    return Preconditions.checkNotNull(
        module.provideNewsApi(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NewsApi> create(RestModule module, Provider<Retrofit> retrofitProvider) {
    return new RestModule_ProvideNewsApiFactory(module, retrofitProvider);
  }
}
